_START -> thing _END 

thing -> expression {
    printf("result: %d\n", $1.n); 
}
expression -> expression '+' term { $$.n = $1.n + $3.n; }
  | term { $$.n = $1.n; }

term -> term '*' factor { $$.n = $1.n * $3.n; }
term -> factor { $$.n = $1.n; }

factor -> '(' expression ')' {
                                printf("expression: %d\n", $2.n);
                                $$.n = $2.n; }
        | T_id { }
        | number {
                    printf("number->digit got %d\n", $1.n);
                    $$.n = $1.n; 
                  }

number -> digit {
                    printf("number should be: %c\n", $1.input);
                    $$.n = $1.input - '0';
            }

digit -> '1' | '2' | '3' | '4' | '5' | '6'| '7' | '8' | '9'
